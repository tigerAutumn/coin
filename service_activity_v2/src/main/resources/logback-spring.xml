<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration>
<configuration debug="true"><!-- 'milliseconds','seconds','minutes' and 'hours' -->
	<Property name="log.name" value="service-activity_v2" />
	<Property name="log.path" value="/data/logs/" />
	<Property name="log.level" value="${log.level}" />
	<contextName>${log.name}</contextName>
	<Property name="patternTemplate" value="[%-5level] [%contextName] %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] [%X{req.remoteHost}] [%X{req.requestURI}] [%X{traceId}] %logger - %msg%n" />
	<jmxConfigurator />
	<shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook" />
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${patternTemplate}</pattern>
		</encoder>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<File>${log.path}/${log.name}/${log.name}.log</File>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy"><!-- rollover daily -->
			<FileNamePattern>${log.path}/${log.name}/${log.name}-log-%d{yyyy-MM-dd}.%i.zip</FileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>150MB</maxFileSize><!-- or whenever the file size reaches 5MB -->
			</timeBasedFileNamingAndTriggeringPolicy>
			<!-- <maxHistory></maxHistory> -->
		</rollingPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${patternTemplate}</pattern>
		</encoder>
	</appender>

	<!--输出到error-->
	<appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${log.path}/${log.name}/${log.name}-error-%d{yyyy-MM-dd}.log</fileNamePattern>
		</rollingPolicy>
		<append>true</append>
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
			<charset>utf-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter"><!-- 只打印ERROR日志 -->
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- 异步输出 -->
	<appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>20</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>2048</queueSize>
		<includeCallerData>true</includeCallerData>
		<neverBlock>true</neverBlock>
		<!-- 停应用时最多等待多少毫秒处理queue中日志,暂定10秒 -->
		<maxFlushTime>10000</maxFlushTime>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="FILE" />
	</appender>

	<root level="ERROR">
		<appender-ref ref="STDOUT" />
		<appender-ref ref="ERROR" />
		<appender-ref ref="ASYNC" />
	</root>
	<logger name="com.hotcoin.activity" additivity="true" level="ERROR" />
</configuration>