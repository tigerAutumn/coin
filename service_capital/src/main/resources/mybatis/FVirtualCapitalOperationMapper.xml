<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkwl.service.capital.dao.FVirtualCapitalOperationMapper">
    <resultMap id="BaseResultMap" type="FVirtualCapitalOperationDO">
        <id column="fid" jdbcType="INTEGER" property="fid"/>
        <result column="fuid" jdbcType="INTEGER" property="fuid"/>
        <result column="fcoinid" jdbcType="INTEGER" property="fcoinid"/>
        <result column="fcreatetime" jdbcType="TIMESTAMP" property="fcreatetime"/>
        <result column="famount" jdbcType="DECIMAL" property="famount"/>
        <result column="ffees" jdbcType="DECIMAL" property="ffees"/>
        <result column="fbtcfees" jdbcType="DECIMAL" property="fbtcfees"/>
        <result column="ftype" jdbcType="INTEGER" property="ftype"/>
        <result column="fstatus" jdbcType="INTEGER" property="fstatus"/>
        <result column="fupdatetime" jdbcType="TIMESTAMP" property="fupdatetime"/>
        <result column="fwithdrawaddress" jdbcType="VARCHAR" property="fwithdrawaddress"/>
        <result column="frechargeaddress" jdbcType="VARCHAR" property="frechargeaddress"/>
        <result column="funiquenumber" jdbcType="VARCHAR" property="funiquenumber"/>
        <result column="fconfirmations" jdbcType="INTEGER" property="fconfirmations"/>
        <result column="fhasowner" jdbcType="BIT" property="fhasowner"/>
        <result column="fblocknumber" jdbcType="BIGINT" property="fblocknumber"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="fagentid" jdbcType="INTEGER" property="fagentid"/>
        <result column="fplatform" jdbcType="INTEGER" property="fplatform"/>
        <result column="memo" jdbcType="VARCHAR" property="memo"/>
        <result column="webLogo" jdbcType="VARCHAR" property="web_logo"/>
        <result column="shortName" jdbcType="VARCHAR" property="short_name"/>
        <result column="fremark" jdbcType="VARCHAR" property="fremark"/>
        <result column="isFrozen" jdbcType="BIT" property="is_frozen" />
        <result column="walletCoinId" jdbcType="INTEGER" property="wallet_coin_id" />
    </resultMap>

    <sql id="operationColumn">fid, fuid, fcoinid, fcreatetime, famount, ffees, ftype, fstatus, fupdatetime,
    fwithdrawaddress, frechargeaddress, funiquenumber, fconfirmations, fhasowner, fbtcfees, fagentid,
    fblocknumber, version, fsource, fplatform, memo,is_frozen,wallet_coin_id</sql>

    <select id="getPageVirtualCapitalOperation" resultType="FVirtualCapitalOperationDO" parameterType="java.util.Map">
        select
        f_virtual_capital_operation.fid, f_virtual_capital_operation.fuid, f_virtual_capital_operation.fcoinid, f_virtual_capital_operation.fcreatetime, f_virtual_capital_operation.famount, f_virtual_capital_operation.ffees, f_virtual_capital_operation.ftype, f_virtual_capital_operation.fstatus, f_virtual_capital_operation.fupdatetime, f_virtual_capital_operation.fwithdrawaddress, f_virtual_capital_operation.frechargeaddress, f_virtual_capital_operation.funiquenumber, f_virtual_capital_operation.fconfirmations, f_virtual_capital_operation.fhasowner, f_virtual_capital_operation.fbtcfees, f_virtual_capital_operation.fagentid, f_virtual_capital_operation.fblocknumber, f_virtual_capital_operation.version, f_virtual_capital_operation.fsource, f_virtual_capital_operation.fplatform, f_virtual_capital_operation.memo 
        ,f_virtual_capital_operation.is_frozen, f_virtual_capital_operation.wallet_coin_id
        ,system_coin_type.web_logo ,system_coin_type.short_name
        ,f_user_virtual_address_withdraw.fremark
        from f_virtual_capital_operation
        left join system_coin_type on f_virtual_capital_operation.fcoinid = system_coin_type.id
        left join 
        (
        	select  f_user_virtual_address_withdraw.fadderess,
        		 f_user_virtual_address_withdraw.fremark,
        		 f_user_virtual_address_withdraw.fcoinid,
        		 f_user_virtual_address_withdraw.fuid
            from f_user_virtual_address_withdraw 
            where 
            f_user_virtual_address_withdraw.fuid = #{fuid,jdbcType=INTEGER} 
            <if test="fcoinid != null">
        	   and f_user_virtual_address_withdraw.fcoinid = #{fcoinid,jdbcType=INTEGER}
        	</if>
             group by f_user_virtual_address_withdraw.fadderess,f_user_virtual_address_withdraw.fcoinid
        ) f_user_virtual_address_withdraw
        on f_virtual_capital_operation.fwithdrawaddress = f_user_virtual_address_withdraw.fadderess and f_virtual_capital_operation.fuid = f_user_virtual_address_withdraw.fuid  and  f_virtual_capital_operation.fcoinid = f_user_virtual_address_withdraw.fcoinid
        where
        f_virtual_capital_operation.fuid = #{fuid,jdbcType=INTEGER} 
        <if test="ftype != null">
        	and f_virtual_capital_operation.ftype = #{ftype,jdbcType=INTEGER} 
        </if>
        <if test="fcoinid != null">
        	and f_virtual_capital_operation.fcoinid = #{fcoinid,jdbcType=INTEGER}
        </if>
        <if test="walletCoinId != null">
            and f_virtual_capital_operation.wallet_coin_id = #{walletCoinId,jdbcType=INTEGER}
        </if>
        <if test="fcoinname != null">
        	and (system_coin_type.short_name like concat('%',#{fcoinname},'%') or
					system_coin_type.name like concat('%',#{fcoinname},'%'))
        </if>
        <if test="begindate != null">
            <![CDATA[and f_virtual_capital_operation.fcreatetime >= #{begindate,jdbcType=VARCHAR}]]>
        </if>
        <if test="enddate != null">
            <![CDATA[and f_virtual_capital_operation.fcreatetime <= #{enddate,jdbcType=VARCHAR}]]>
        </if>
        order by f_virtual_capital_operation.fupdatetime desc
        limit #{offset},#{limit}
    </select>

    <select id="countVirtualCapitalOperation" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(o.fid)
        from f_virtual_capital_operation o, system_coin_type t
        where
        o.fuid = #{fuid,jdbcType=INTEGER} 
        and o.fcoinid = t.id
        <if test="ftype != null">
        and o.ftype = #{ftype,jdbcType=INTEGER}
        </if>
        <if test="fcoinid != null">
            and o.fcoinid = #{fcoinid,jdbcType=INTEGER}
        </if>
        <if test="walletCoinId != null">
            and o.wallet_coin_id = #{walletCoinId,jdbcType=INTEGER}
        </if>
        <if test="fcoinname != null">
            and (t.short_name like concat('%',#{fcoinname},'%') or
					t.name like concat('%',#{fcoinname},'%'))
        </if>
        <if test="begindate != null">
            <![CDATA[and o.fcreatetime >= #{begindate,jdbcType=VARCHAR}]]>
        </if>
        <if test="enddate != null">
            <![CDATA[and o.fcreatetime <= #{enddate,jdbcType=VARCHAR}]]>
        </if>
        <if test="fstatus != null">
            and o.fstatus = #{fstatus,jdbcType=INTEGER}
        </if>
    </select>

    <select id="getVirtualWalletWithdrawTimes" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        SELECT
            count(fid)
        FROM f_virtual_capital_operation
        WHERE
            fuid = #{fuid,jdbcType=INTEGER} AND
            ftype = 2 AND
            DATE_FORMAT(fcreatetime, "%Y-%m-%d") = DATE_FORMAT(now(), "%Y-%m-%d")
    </select>
    <select id="getDayWithdrawCny" resultType="java.math.BigDecimal">
        SELECT
            IFNULL(sum(famount), 0)
        FROM f_virtual_capital_operation
        WHERE
            fuid = #{fuid,jdbcType=INTEGER}
            AND ftype = 2
            AND DATE_FORMAT(fcreatetime, "%Y-%m-%d") = DATE_FORMAT(now(), "%Y-%m-%d")
    </select>
    <select id="selectByTxid" resultType="FVirtualCapitalOperationDO">
        select
        <include refid="operationColumn"/>
        from f_virtual_capital_operation where funiquenumber = #{funiquenumber}
    </select>

    <!-- Base -->

    <insert id="insert" parameterType="FVirtualCapitalOperationDO" keyProperty="fid">
        INSERT INTO f_virtual_capital_operation (
            fuid,
            fcoinid,
            fcreatetime,
            famount,
            ffees,
            fbtcfees,
            ftype,
            fstatus,
            fupdatetime,
            fwithdrawaddress,
            frechargeaddress,
            funiquenumber,
            fconfirmations,
            fhasowner,
            fblocknumber,
            version,
            fagentid,
            fsource,
            fplatform,
            memo,
            is_frozen,
            wallet_coin_id)
        VALUES (
            #{fuid,jdbcType=INTEGER},
            #{fcoinid,jdbcType=INTEGER},
            #{fcreatetime,jdbcType=TIMESTAMP},
            #{famount,jdbcType=DECIMAL},
            #{ffees,jdbcType=DECIMAL},
            #{fbtcfees,jdbcType=DECIMAL},
            #{ftype,jdbcType=INTEGER},
            #{fstatus,jdbcType=INTEGER},
            #{fupdatetime,jdbcType=TIMESTAMP},
            #{fwithdrawaddress,jdbcType=VARCHAR},
            #{frechargeaddress,jdbcType=VARCHAR},
            #{funiquenumber,jdbcType=VARCHAR},
            #{fconfirmations,jdbcType=INTEGER},
            #{fhasowner,jdbcType=BIT},
            #{fblocknumber,jdbcType=BIGINT},
            #{version,jdbcType=INTEGER},
            #{fagentid,jdbcType=INTEGER},
            #{fsource,jdbcType=INTEGER},
            #{fplatform,jdbcType=INTEGER},
            #{memo,jdbcType=VARCHAR},
            #{isFrozen,jdbcType=BIT},
            #{walletCoinId,jdbcType=INTEGER}
        )
    </insert>

    <update id="updateByPrimaryKey" parameterType="FVirtualCapitalOperationDO">
        UPDATE f_virtual_capital_operation
        SET
            fuid             = #{fuid,jdbcType=INTEGER},
            fcoinid          = #{fcoinid,jdbcType=INTEGER},
            fcreatetime      = #{fcreatetime,jdbcType=TIMESTAMP},
            famount          = #{famount,jdbcType=DECIMAL},
            ffees            = #{ffees,jdbcType=DECIMAL},
            fbtcfees         = #{fbtcfees,jdbcType=DECIMAL},
            ftype            = #{ftype,jdbcType=INTEGER},
            fstatus          = #{fstatus,jdbcType=INTEGER},
            fupdatetime      = #{fupdatetime,jdbcType=TIMESTAMP},
            fwithdrawaddress = #{fwithdrawaddress,jdbcType=VARCHAR},
            frechargeaddress = #{frechargeaddress,jdbcType=VARCHAR},
            funiquenumber    = #{funiquenumber,jdbcType=VARCHAR},
            fconfirmations   = #{fconfirmations,jdbcType=INTEGER},
            fhasowner        = #{fhasowner,jdbcType=BIT},
            fblocknumber     = #{fblocknumber,jdbcType=BIGINT},
            version          = version + 1,
            fagentid         = #{fagentid,jdbcType=INTEGER},
            fsource          = #{fsource,jdbcType=INTEGER},
            fplatform        = #{fplatform,jdbcType=INTEGER},
            memo             = #{memo,jdbcType=VARCHAR},
            is_frozen        = #{isFrozen,jdbcType=BIT},
            wallet_coin_id   = #{walletCoinId,jdbcType=INTEGER}
        WHERE
            fid = #{fid,jdbcType=INTEGER} AND version = #{version,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="operationColumn"/>
        from f_virtual_capital_operation
        where
        fid = #{fid,jdbcType=INTEGER}
    </select>

    <select id="getDayWithdrawCoin" resultType="java.math.BigDecimal">
        SELECT
            IFNULL(sum(famount), 0) + IFNULL(sum(ffees), 0) + IFNULL(sum(fbtcfees), 0)
        FROM f_virtual_capital_operation
        WHERE
            fuid = #{fuid,jdbcType=INTEGER} AND fcoinid = #{fcoinid,jdbcType=INTEGER}
            AND ftype = 2
            AND fstatus in (1, 2, 3, 5)
            AND DATE_FORMAT(fcreatetime, "%Y-%m-%d") = DATE_FORMAT(now(), "%Y-%m-%d")
    </select>
</mapper>