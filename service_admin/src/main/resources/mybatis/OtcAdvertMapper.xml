<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qkwl.service.admin.bc.dao.OtcAdvertMapper">

	<select id="countOtcAdvertListByParam" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(a.id)
        from otc_advert a, system_coin_type t 
        where a.coin_id = t.id
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="coinName != null">
            and t.short_name = #{coinName}
        </if>
        <if test="userId != null">
            and a.user_id = #{userId}
        </if>
        <if test="side != 'ALL'">
            and a.side = #{side}
        </if>
        <if test="status != null">
            and a.status = #{status}
        </if>
    </select>
    
    <select id="getOtcAdvertPageList" resultType="OtcAdvert" parameterType="java.util.Map">
        select a.*, t.short_name coinName
        from otc_advert a, system_coin_type t 
        where a.coin_id = t.id
        <if test="id != null">
            and a.id = #{id}
        </if>
        <if test="coinName != null">
            and t.short_name = #{coinName}
        </if>
        <if test="userId != null">
            and a.user_id = #{userId}
        </if>
        <if test="side != 'ALL'">
            and a.side = #{side}
        </if>
        <if test="status != null">
            and a.status = #{status}
        </if>
        <if test="orderField != null">
            order by ${orderField} ${orderDirection}
        </if>
        limit #{offset},#{limit}
    </select>
    
    <select id="getBankinfoList" resultType="FUserBankinfoDTO" parameterType="java.lang.Integer">
        select b.*, p.name_code paymentNameCode
        from otc_advert a, f_user_bankinfo b, otc_payment p
         where a.id = #{id}
         	and a.user_id = b.fuid
         	and is_default = 1
         	and (a.bankinfo_first_id = b.ftype
         		or a.bankinfo_second_id = b.ftype
         		or a.bankinfo_third_id = b.ftype)
         	and b.ftype = p.id
    </select>
    
  	<select id="selectAdvertById" resultType="OtcAdvert" parameterType="java.lang.Integer">
        select *
        from otc_advert
         where id = #{id}
    </select>
    
   <select id="selectAdvertByIdLock" resultType="OtcAdvert" parameterType="java.lang.Integer">
        select * 
        from otc_advert where id = #{id} for update
    </select>
    
     <update id="updateOtcAdvert" parameterType="OtcAdvert" >
    update otc_advert 
	<set >
      <if test="userId != null" >
        user_id = #{userId},
      </if>
      <if test="status != null" >
    	status = #{status},
      </if>
      <if test="isFrozen != null" >
    	is_frozen = #{isFrozen},
      </if>
      <if test="side != null" >
        side = #{side},
      </if>
      <if test="coinId != null" >
        coin_id = #{coinId},
      </if>
      <if test="currencyId != null" >
        currency_id = #{currencyId},
      </if>
      <if test="priceType != null" >
        price_type = #{priceType},
      </if>
      <if test="floatMarket != null" >
        float_market = #{floatMarket},
      </if>
      <if test="priceRate != null" >
        price_rate = #{priceRate},
      </if>
      <if test="acceptablePrice != null" >
        acceptable_price = #{acceptablePrice},
      </if>
      <if test="fixedPrice != null" >
        fixed_price = #{fixedPrice},
      </if>
      <if test="volume != null" >
        volume = #{volume},
      </if>
      <if test="visiableVolume != null" >
        visiable_volume = #{visiableVolume},
      </if>
      <if test="tradingVolume != null" >
        trading_volume = #{tradingVolume},
      </if>
      <if test="frozenVolume != null" >
        frozen_volume = #{frozenVolume},
      </if>
      <if test="feeRate != null" >
        fee_rate = #{feeRate},
      </if>
      <if test="bankinfoFirstId != null" >
        bankinfo_first_id = #{bankinfoFirstId},
      </if>
      <if test="bankinfoSecondId != null" >
        bankinfo_second_id = #{bankinfoSecondId},
      </if>
      <if test="bankinfoThirdId != null" >
        bankinfo_third_id = #{bankinfoThirdId},
      </if>
      <if test="minAmount != null" >
        min_amount = #{minAmount},
      </if>
      <if test="maxAmount != null" >
        max_amount = #{maxAmount},
      </if>
      <if test="maxPaytime != null" >
        max_paytime = #{maxPaytime},
      </if>
      <if test="description != null" >
        description = #{description},
      </if>
      <if test="note != null" >
        note = #{note},
      </if>
      <if test="greetings != null" >
        greetings = #{greetings},
      </if>
      <if test="tag != null" >
        tag = #{tag},
      </if>
      <if test="maxProcessing != null" >
        max_processing = #{maxProcessing},
      </if>
      <if test="successCount != null" >
        success_count = #{successCount},
      </if>
      <if test="overdueTime != null" >
        overdue_time = #{overdueTime},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime},
      </if>
    </set>
    where 
    	id = #{id,jdbcType=INTEGER}
   </update>
    
    <update id="updateAdvert" parameterType="OtcAdvert" >
    update otc_advert set 
    	is_frozen = #{isFrozen,jdbcType=INTEGER}
    where 
    	id = #{id,jdbcType=INTEGER}
   </update>
   
   <select id="selectAdvertByUid" resultType="OtcAdvert" parameterType="java.lang.Integer">
        select * 
        from otc_advert 
        where user_id = #{uid}
            and status = 1
    </select>
    
    <select id="getOrderVolume" resultType="java.math.BigDecimal" parameterType="java.lang.Integer">
   		select sum(o.ad_fee + o.amount) from otc_advert a, otc_order o 
   		where a.id = o.ad_id 
   			and o.create_time > a.update_time
   			and a.id = #{advertId} 
   			and o.status in (1,2,3,6)
   		group by o.ad_id
   </select>
   
   <select id="getAdvertFrozen" resultType="java.math.BigDecimal">
    	select ifnull(sum(volume*(1+fee_rate)), 0)
    	from otc_advert 
    	where user_id = #{userId}
    		and coin_id = #{coinId}
    		and side = "SELL"
    		and status = 1
    </select>
    
    <select id="getOrderConsumption" resultType="java.math.BigDecimal">
    	select ifnull(sum(o.ad_fee + o.amount), 0) from otc_advert a, otc_order o 
   		where a.user_id = #{userId}
   			and a.coin_id = #{coinId}
   			and a.side = "SELL"
   			and a.status = 1 
   			and a.id = o.ad_id 
   			and o.create_time >= a.update_time
   			and o.status in (1,2,3,6);
    </select>
    
    <select id="getOrderFrozen" resultType="java.math.BigDecimal">
   		select ifnull(sum(
   		case when o.ad_user_id = #{userId} then (o.ad_fee + o.amount)
   			 when o.user_id = #{userId} then o.amount
   		end), 0)
   		from otc_order o, otc_advert a
   		where o.seller_id = #{userId}
   			and a.coin_id = #{coinId}
   			and o.ad_id = a.id
   			and o.status in (1,2,6)
   </select>
</mapper>