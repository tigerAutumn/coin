<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qkwl.service.otc.dao.UserOtcCoinWalletMapper">

  <sql id="column">id, uid, coin_id, total, frozen, borrow, gmt_create, gmt_modified, version</sql>

  <insert id="insert" parameterType="com.qkwl.common.dto.wallet.UserOtcCoinWallet">
    insert into user_otc_coin_wallet (uid, coin_id,
      total, frozen, borrow, ico,
      gmt_create,gmt_modified)
    values (#{uid,jdbcType=INTEGER}, #{coinId,jdbcType=INTEGER},
      #{total,jdbcType=DECIMAL}, #{frozen,jdbcType=DECIMAL}, #{borrow,jdbcType=DECIMAL}, #{ico,jdbcType=DECIMAL},
      #{gmtCreate,jdbcType=TIMESTAMP},#{gmtModified,jdbcType=TIMESTAMP})
  </insert>

  <update id="update" parameterType="com.qkwl.common.dto.wallet.UserOtcCoinWallet">
    update user_otc_coin_wallet set
      total = #{total,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      borrow = #{borrow,jdbcType=DECIMAL},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateCAS">
    update user_otc_coin_wallet set
      total = #{total,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      borrow = #{borrow,jdbcType=DECIMAL},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
	  version =if(version+1> 9999999999999999,0,version+1)
    where id = #{id,jdbcType=INTEGER} and version=#{version,jdbcType = INTEGER}
  </update>
  
  <update id="updateWalletCAS">
    update user_otc_coin_wallet set
      total = #{total,jdbcType=DECIMAL},
      frozen = #{frozen,jdbcType=DECIMAL},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
	  version =if(version+1> 9999999999999999,0,version+1)
    where id = #{id,jdbcType=INTEGER} and version=#{version,jdbcType = BIGINT}
  </update>
  
  <update id="updateFrozenCAS">
	update user_otc_coin_wallet set
	  total = total - #{frozen,jdbcType=DECIMAL},
	  frozen = frozen + #{frozen,jdbcType=DECIMAL},
	  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
	  version =if(version+1> 9999999999999999,0,version+1)
	  where id = #{id,jdbcType=INTEGER} and version=#{version,jdbcType = INTEGER}
	</update>
	
	 <update id="updateUnFrozenCAS">
	update user_otc_coin_wallet set
	  total = total + #{frozen,jdbcType=DECIMAL},
	  frozen = frozen - #{frozen,jdbcType=DECIMAL},
	  gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
	  version =if(version+1> 9999999999999999,0,version+1)
	where id = #{id,jdbcType=INTEGER} and version=#{version,jdbcType = INTEGER}
	</update>
  
  
  <select id="select" resultType="com.qkwl.common.dto.wallet.UserOtcCoinWallet">
    select <include refid="column" /> from user_otc_coin_wallet where uid = #{uid} and coin_id = #{coinId}
  </select>
  
  <select id="selectLock" resultType="com.qkwl.common.dto.wallet.UserOtcCoinWallet">
    select <include refid="column" /> from user_otc_coin_wallet where uid = #{uid} and coin_id = #{coinId} for update
  </select>
  
  <select id="selectByUidAndCoinids" resultType="com.qkwl.common.dto.wallet.UserOtcCoinWallet">
    select wallet.*,coin.name as coinName,coin.short_name as shortName,coin.web_logo as webLogo
    from user_otc_coin_wallet wallet
	LEFT JOIN system_coin_type coin on wallet.coin_id = coin.id
    where wallet.uid = #{uid} and wallet.coin_id in 
    <foreach collection="coinids" item="item" index="index" open="(" close=")" separator=",">
	  #{item}
	</foreach>
  </select>
  
  

</mapper>