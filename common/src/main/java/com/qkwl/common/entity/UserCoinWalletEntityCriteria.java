package com.qkwl.common.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserCoinWalletEntityCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public UserCoinWalletEntityCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("`uid` is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("`uid` is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("`uid` =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("`uid` <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("`uid` >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("`uid` >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("`uid` <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("`uid` <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("`uid` in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("`uid` not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("`uid` between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("`uid` not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andCoinIdIsNull() {
            addCriterion("coin_id is null");
            return (Criteria) this;
        }

        public Criteria andCoinIdIsNotNull() {
            addCriterion("coin_id is not null");
            return (Criteria) this;
        }

        public Criteria andCoinIdEqualTo(Integer value) {
            addCriterion("coin_id =", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdNotEqualTo(Integer value) {
            addCriterion("coin_id <>", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdGreaterThan(Integer value) {
            addCriterion("coin_id >", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("coin_id >=", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdLessThan(Integer value) {
            addCriterion("coin_id <", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdLessThanOrEqualTo(Integer value) {
            addCriterion("coin_id <=", value, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdIn(List<Integer> values) {
            addCriterion("coin_id in", values, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdNotIn(List<Integer> values) {
            addCriterion("coin_id not in", values, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdBetween(Integer value1, Integer value2) {
            addCriterion("coin_id between", value1, value2, "coinId");
            return (Criteria) this;
        }

        public Criteria andCoinIdNotBetween(Integer value1, Integer value2) {
            addCriterion("coin_id not between", value1, value2, "coinId");
            return (Criteria) this;
        }

        public Criteria andTotalIsNull() {
            addCriterion("total is null");
            return (Criteria) this;
        }

        public Criteria andTotalIsNotNull() {
            addCriterion("total is not null");
            return (Criteria) this;
        }

        public Criteria andTotalEqualTo(BigDecimal value) {
            addCriterion("total =", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotEqualTo(BigDecimal value) {
            addCriterion("total <>", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThan(BigDecimal value) {
            addCriterion("total >", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("total >=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThan(BigDecimal value) {
            addCriterion("total <", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("total <=", value, "total");
            return (Criteria) this;
        }

        public Criteria andTotalIn(List<BigDecimal> values) {
            addCriterion("total in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotIn(List<BigDecimal> values) {
            addCriterion("total not in", values, "total");
            return (Criteria) this;
        }

        public Criteria andTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("total not between", value1, value2, "total");
            return (Criteria) this;
        }

        public Criteria andFrozenIsNull() {
            addCriterion("frozen is null");
            return (Criteria) this;
        }

        public Criteria andFrozenIsNotNull() {
            addCriterion("frozen is not null");
            return (Criteria) this;
        }

        public Criteria andFrozenEqualTo(BigDecimal value) {
            addCriterion("frozen =", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenNotEqualTo(BigDecimal value) {
            addCriterion("frozen <>", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenGreaterThan(BigDecimal value) {
            addCriterion("frozen >", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen >=", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenLessThan(BigDecimal value) {
            addCriterion("frozen <", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenLessThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen <=", value, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenIn(List<BigDecimal> values) {
            addCriterion("frozen in", values, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenNotIn(List<BigDecimal> values) {
            addCriterion("frozen not in", values, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen between", value1, value2, "frozen");
            return (Criteria) this;
        }

        public Criteria andFrozenNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen not between", value1, value2, "frozen");
            return (Criteria) this;
        }

        public Criteria andBorrowIsNull() {
            addCriterion("borrow is null");
            return (Criteria) this;
        }

        public Criteria andBorrowIsNotNull() {
            addCriterion("borrow is not null");
            return (Criteria) this;
        }

        public Criteria andBorrowEqualTo(BigDecimal value) {
            addCriterion("borrow =", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowNotEqualTo(BigDecimal value) {
            addCriterion("borrow <>", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowGreaterThan(BigDecimal value) {
            addCriterion("borrow >", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("borrow >=", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowLessThan(BigDecimal value) {
            addCriterion("borrow <", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowLessThanOrEqualTo(BigDecimal value) {
            addCriterion("borrow <=", value, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowIn(List<BigDecimal> values) {
            addCriterion("borrow in", values, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowNotIn(List<BigDecimal> values) {
            addCriterion("borrow not in", values, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("borrow between", value1, value2, "borrow");
            return (Criteria) this;
        }

        public Criteria andBorrowNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("borrow not between", value1, value2, "borrow");
            return (Criteria) this;
        }

        public Criteria andIcoIsNull() {
            addCriterion("ico is null");
            return (Criteria) this;
        }

        public Criteria andIcoIsNotNull() {
            addCriterion("ico is not null");
            return (Criteria) this;
        }

        public Criteria andIcoEqualTo(BigDecimal value) {
            addCriterion("ico =", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoNotEqualTo(BigDecimal value) {
            addCriterion("ico <>", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoGreaterThan(BigDecimal value) {
            addCriterion("ico >", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ico >=", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoLessThan(BigDecimal value) {
            addCriterion("ico <", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ico <=", value, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoIn(List<BigDecimal> values) {
            addCriterion("ico in", values, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoNotIn(List<BigDecimal> values) {
            addCriterion("ico not in", values, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ico between", value1, value2, "ico");
            return (Criteria) this;
        }

        public Criteria andIcoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ico not between", value1, value2, "ico");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNull() {
            addCriterion("gmt_create is null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIsNotNull() {
            addCriterion("gmt_create is not null");
            return (Criteria) this;
        }

        public Criteria andGmtCreateEqualTo(Date value) {
            addCriterion("gmt_create =", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotEqualTo(Date value) {
            addCriterion("gmt_create <>", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThan(Date value) {
            addCriterion("gmt_create >", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_create >=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThan(Date value) {
            addCriterion("gmt_create <", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateLessThanOrEqualTo(Date value) {
            addCriterion("gmt_create <=", value, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateIn(List<Date> values) {
            addCriterion("gmt_create in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotIn(List<Date> values) {
            addCriterion("gmt_create not in", values, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateBetween(Date value1, Date value2) {
            addCriterion("gmt_create between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtCreateNotBetween(Date value1, Date value2) {
            addCriterion("gmt_create not between", value1, value2, "gmtCreate");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNull() {
            addCriterion("gmt_modified is null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIsNotNull() {
            addCriterion("gmt_modified is not null");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedEqualTo(Date value) {
            addCriterion("gmt_modified =", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotEqualTo(Date value) {
            addCriterion("gmt_modified <>", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThan(Date value) {
            addCriterion("gmt_modified >", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("gmt_modified >=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThan(Date value) {
            addCriterion("gmt_modified <", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedLessThanOrEqualTo(Date value) {
            addCriterion("gmt_modified <=", value, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedIn(List<Date> values) {
            addCriterion("gmt_modified in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotIn(List<Date> values) {
            addCriterion("gmt_modified not in", values, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedBetween(Date value1, Date value2) {
            addCriterion("gmt_modified between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andGmtModifiedNotBetween(Date value1, Date value2) {
            addCriterion("gmt_modified not between", value1, value2, "gmtModified");
            return (Criteria) this;
        }

        public Criteria andVersionIsNull() {
            addCriterion("version is null");
            return (Criteria) this;
        }

        public Criteria andVersionIsNotNull() {
            addCriterion("version is not null");
            return (Criteria) this;
        }

        public Criteria andVersionEqualTo(Long value) {
            addCriterion("version =", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotEqualTo(Long value) {
            addCriterion("version <>", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThan(Long value) {
            addCriterion("version >", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionGreaterThanOrEqualTo(Long value) {
            addCriterion("version >=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThan(Long value) {
            addCriterion("version <", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionLessThanOrEqualTo(Long value) {
            addCriterion("version <=", value, "version");
            return (Criteria) this;
        }

        public Criteria andVersionIn(List<Long> values) {
            addCriterion("version in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotIn(List<Long> values) {
            addCriterion("version not in", values, "version");
            return (Criteria) this;
        }

        public Criteria andVersionBetween(Long value1, Long value2) {
            addCriterion("version between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andVersionNotBetween(Long value1, Long value2) {
            addCriterion("version not between", value1, value2, "version");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenIsNull() {
            addCriterion("deposit_frozen is null");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenIsNotNull() {
            addCriterion("deposit_frozen is not null");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen =", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenNotEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen <>", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenGreaterThan(BigDecimal value) {
            addCriterion("deposit_frozen >", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen >=", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenLessThan(BigDecimal value) {
            addCriterion("deposit_frozen <", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen <=", value, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenIn(List<BigDecimal> values) {
            addCriterion("deposit_frozen in", values, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenNotIn(List<BigDecimal> values) {
            addCriterion("deposit_frozen not in", values, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deposit_frozen between", value1, value2, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deposit_frozen not between", value1, value2, "depositFrozen");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalIsNull() {
            addCriterion("deposit_frozen_total is null");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalIsNotNull() {
            addCriterion("deposit_frozen_total is not null");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen_total =", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalNotEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen_total <>", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalGreaterThan(BigDecimal value) {
            addCriterion("deposit_frozen_total >", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen_total >=", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalLessThan(BigDecimal value) {
            addCriterion("deposit_frozen_total <", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("deposit_frozen_total <=", value, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalIn(List<BigDecimal> values) {
            addCriterion("deposit_frozen_total in", values, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalNotIn(List<BigDecimal> values) {
            addCriterion("deposit_frozen_total not in", values, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deposit_frozen_total between", value1, value2, "depositFrozenTotal");
            return (Criteria) this;
        }

        public Criteria andDepositFrozenTotalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("deposit_frozen_total not between", value1, value2, "depositFrozenTotal");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_coin_wallet
     *
     * @mbg.generated do_not_delete_during_merge Fri Nov 22 15:34:30 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_coin_wallet
     *
     * @mbg.generated Fri Nov 22 15:34:30 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}